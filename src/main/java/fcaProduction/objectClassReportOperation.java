package fcaProduction;

import java.io.IOException;
import java.sql.SQLException;

import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.dao.DaoManager;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.jdbc.JdbcConnectionSource;
//import com.j256.ormlite.jdbc.JdbcConnectionSource;
import com.j256.ormlite.support.ConnectionSource;
import com.j256.ormlite.table.DatabaseTable;
import com.j256.ormlite.table.TableUtils;

// klasa do ormlite twirzy obiekt z kazdej zeskanowanej operacji w tabeli LOG
// bedzie uzywana przy skanowaniu operacji przez operatorow
// pola klasy to kolumny z tablei LOG

// uwagi -> DODAC OBSUGE TABLEI PRODUCTION_PLAN TO TA TABELA KTORA OBSLUGUJE STRONE HTML

@DatabaseTable(tableName = "LOG")
public class objectClassReportOperation {

	@DatabaseField(generatedId = true, columnName = "EMPLOYEES_ID")
	public int employeeId;

	@DatabaseField(columnName = "BOX_CODE")
	public String boxCode;

	//

	@DatabaseField(columnName = "DATE")
	public String date;

	@DatabaseField(columnName = "TIME")
	public String time;

	@DatabaseField(columnName = "OPERATOR")
	public String operator;

	@DatabaseField(columnName = "AMOUNT")
	public int amount;

	@DatabaseField(columnName = "LOT")
	public String lot;

	@DatabaseField(columnName = "SUB_PNO")
	public String subPno;

	@DatabaseField(columnName = "MACHINE")
	public String machine;

	public int getEmployeeId() {
		return employeeId;
	}

//	public void setEmployeeId(int employeeId) {
	// chyba niepotrzbne - klucz jest autogenerated
//		this.employeeId = employeeId;
//	}

	public String getBoxCode() {
		return boxCode;
	}

	public void setBoxCode(String boxCode) {
		this.boxCode = boxCode;
	}

	public String getDate() {
		return date;
	}

	public void setDate(String date) {
		this.date = date;
	}

	public String getTime() {
		return time;
	}

	public void setTime(String time) {
		this.time = time;
	}

	public String getOperator() {
		return operator;
	}

	public void setOperator(String operator) {
		this.operator = operator;
	}

	public int getAmount() {
		return amount;
	}

	public void setAmount(int amount) {
		this.amount = amount;
	}

	public String getLot() {
		return lot;
	}

	public void setLot(String lot) {
		this.lot = lot;
	}

	public String getSubPno() {
		return subPno;
	}

	public void setSubPno(String subPno) {
		this.subPno = subPno;
	}

	public String getMachine() {
		return machine;
	}

	public void setMachine(String machine) {
		this.machine = machine;
	}
	
	

	public void addObjectClassReportOperationToDb(String dbPath) {
		ConnectionSource connectionSource = null;
		try {
			connectionSource = new JdbcConnectionSource("jdbc:sqlite:" + dbPath);
			TableUtils.createTableIfNotExists(connectionSource, objectClassReportOperation.class);
			Dao<objectClassReportOperation, ?> dao = DaoManager.createDao(connectionSource, objectClassReportOperation.class);
			dao.create(this);
		} catch (SQLException e) {
			System.out.println("!!!!!!!!!!!!!!!WYSTAPIL BLAD W POLACZENIU Z BAZA DANYCH: " + e);
			e.printStackTrace();
		}

		try {
			connectionSource.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public String toString() {
		return "objectClassReportOperation [employeeId=" + employeeId + ", boxCode=" + boxCode + ", date=" + date
				+ ", time=" + time + ", operator=" + operator + ", amount=" + amount + ", lot=" + lot + ", subPno="
				+ subPno + ", machine=" + machine + "]";
	}
	
	
	

}
